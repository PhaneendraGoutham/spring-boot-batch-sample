apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "groovy"
apply plugin: 'spring-boot'

defaultTasks "clean", "build", "bootRun"

project.ext {
    artifactId = 'spring-boot-batch-sample'
    springBootVersion = '1.1.4.RELEASE'
    springIntegrationVersion = '4.0.2.RELEASE'
}

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile) each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile) each { it.groovyOptions.encoding = defaultEncoding }

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.1.RELEASE")
    }
}

repositories {
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-batch:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-velocity:$springBootVersion")
    compile("org.springframework.integration:spring-integration-mail:$springIntegrationVersion")
    compile("javax.mail:mail:1.4.7")

//    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("org.codehaus.groovy:groovy-all:2.2.2")
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0')
    testCompile('cglib:cglib-nodep:3.1')
    testCompile('org.objenesis:objenesis:2.1')
}

task wrapper(type: Wrapper) { gradleVersion = '1.12' }

eclipse {
    pathVariables GRADLE_REPO: file(System.properties['user.home'] + '/.gradle/cache')
}

run {
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}
